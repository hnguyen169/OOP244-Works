//Name: Harrison Nguyen
//Email: hnguyen169@myseneca.ca
//ID: 167096239
//Date Compeleted: 06/02/2024
//I have done all the coding by myself and only copied the code that my professor provided to complete my workshops and assignments.

In this workshop, we were supposed to define class types, privatize data within those class types, and instantiate an object of class type but with the code we were given, it had already been completed. Even though the modules were created for me I still went through them to make sure every private member variable/function and public member variable/function matched the pseudo code. Defining a class type involves specifying the structure of a class by declaring the attributes which is important for encapsulating data and for creating objects. Privatizing data is also important because when setting key attributes to private, we are ensured that the data is protected from unauthorized access and changes. Examples from the code defining a class type and privatizing data are: class Item having three private attributes in m_itemName, m_price, and m_taxed and class Bill having m_title, Item* m_items, m_noOfItems, and m_itemsAdded. To interact with the objects, we accessed the data through the public member functions. An example is in the Item class, display(), accesses private data members to format and print their values but does not modify any of the actual data itself which is important for maintaining data integrity. In the workshop I used <iomanip> as a standard library facilities to format data with left/right, setfill, setw, and setprecision functions. I spoke to some of my classmates and they said they were able to format the data without using any additional standard library facilities. I tried to do it as well but was not successful so I ended up using <iomanip> as I felt it was very intuitive.